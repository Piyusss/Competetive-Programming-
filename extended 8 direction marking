#include <bits/stdc++.h>
using namespace std;
int main() {
    // Assuming the grid is a 2D vector named 'grid'
    vector<vector<int>>grid(ROWS,vector<int>(COLS,0)); // Replace ROWS and COLS with the actual dimensions of your grid

    // Assuming 'row' and 'col' are the coordinates of the cell for which you want to print the directions
    int row = ax; // Replace with the actual row coordinate
    int col = ay; // Replace with the actual column coordinate

    // Define the 8 directions (horizontal, vertical, and diagonal)
    int dr[8] = {-1, -1, -1, 0, 0, 1, 1, 1};
    int dc[8] = {-1, 0, 1, -1, 1, -1, 0, 1};
    vector<vector<int>>vis(9,vector<int>(9,0));

    // Loop through all 8 directions and print the cells until the boundary is reached.Most-Important
    for (int i = 0; i < 8; i++) {
        int newRow = row + dr[i];
        int newCol = col + dc[i];

        while (newRow>= 1 && newRow <=ROWS && newCol>= 1 && newCol <=COLS){
            vis[newRow][newCol]=1;
            newRow += dr[i];
            newCol += dc[i];
        }
    }
    
    //just for verification
    for(int i=0 ; i<=8 ; i++){
        for(int j=0 ; j<=8 ; j++){
            cout<<vis[i][j];
        }
        cout<<endl;
    }
    //verification-done
    
}
