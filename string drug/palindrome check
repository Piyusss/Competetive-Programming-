bool isPalindrome(const string& s) {
    int left = 0;
    int right = s.length() - 1;
    while (left < right) {
        if (s[left] != s[right]) {
            return false;
        }
        left++;
        right--;
    }
    return true;
}

//one pointer approach
bool f(string s){
	ll n=s.size();
	ll i=0;
	while(i<n/2){
		if(s[i]!=s[n-i-1])return 0;
		i++;
	}
	return 1;
}


//recursive method
bool f(string s,ll n,ll i){
	if(i>=n-i-1)return 1;
	if(s[i]!=s[n-i-1])return 0;
	return f(s,n,++i);
}
