vector<string> getAllPalindromicSubstrings(const string& s) {
    vector<string> result;
    int n = s.length();

    for (int i = 0; i < n; i++) {
        // Odd-length palindromes
        int left = i;
        int right = i;
        while (left >= 0 && right < n && s[left] == s[right]) {
            result.push_back(s.substr(left, right - left + 1));
            left--;
            right++;
        }

        // Even-length palindromes
        left = i;
        right = i + 1;
        while (left >= 0 && right < n && s[left] == s[right]) {
            result.push_back(s.substr(left, right - left + 1));
            left--;
            right++;
        }
    }

    return result;
}
